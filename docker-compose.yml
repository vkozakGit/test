version: '3.8'
services:
  mongo:
    image: mongo:6.0
    container_name: my-mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./data:/data/db
#    environment:
#      MONGODB_URI: mongodb://mongo:27017/mydb
#      MONGODB_DATABASE: mydb
    networks:
      my-network:
        aliases:
          - my-mongo
  postgres:
    image: postgres:15.0
    container_name: my-postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - ./pgdata:/var/lib/postgresql/data
    networks:
      my-network:
        aliases:
          - my-postgres
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    container_name: my-zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      my-network:
        aliases:
          - my-zookeeper
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: my-kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      my-network:
        aliases:
          - my-kafka
  app-listener:
    build:
      context: ./app-listener/
      dockerfile: Dockerfile
    container_name: app-listener
    restart: always
    ports:
      - "8081:8081"
    depends_on:
      - kafka
      - postgres
    networks:
      my-network:
        aliases:
          - app-listener
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: my-app
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - mongo
      - postgres
      - kafka
    networks:
      my-network:
        aliases:
          - my-app
networks:
  my-network:
